#!/bin/bash

#:brew changelog <formula>
#:
#:Gets the changelog for a given formula.
#:Only works if the homepage is a GitHub repo.
#:Checks the CHANGELOG.md of the version's tag first,
#:then tries to collect release notes from the repo's releases.

formulae_json=$(brew info "$1" --json=v1)
homepage=$(echo "$formulae_json" | jq -r '.[0].homepage')
src_url=$(echo "$formulae_json" | jq -r '.[0].urls.stable.url')
version="v$(echo "$formulae_json" | jq -r '.[0].versions.stable')"

if [[ $homepage =~ github.com ]]; then
  IFS="/" read -a url -r <<< "$homepage"
  nwo="${url[3]}/${url[4]}"
elif [[ $src_url =~ github.com ]]; then
  IFS="/" read -a url -r <<< "$src_url"
  nwo="${url[3]}/${url[4]}"
fi

if [[ $nwo ]]; then
  changelog_url="https://github.com/$nwo/raw/$version/CHANGELOG.md"
  releases=$(gh api "repos/$nwo/releases" -t '{{range .}}{{"\n"}}# {{.name}}{{"\n\n"}}{{.body}}{{"\n---\n"}}{{end}}')
else
  echo "Couldn't find a GitHub repo to check for release notes :/"
  echo "The homepage is $homepage if you'd like to give that a try."
fi

if [[ $releases ]]; then
  echo "$releases" | bat --file-name "$1 - GitHub releases" -l md -
  exit
fi

changelog=$(curl -fLs "$changelog_url")

if [[ $changelog ]]; then
  echo "$changelog" | bat --file-name "$1 - CHANGELOG.md"
  exit
fi

echo "Couldn't find a changelog on GitHub in releases or a CHANGELOG.md :/"
echo "The homepage is $homepage if you'd like to give that a try."
